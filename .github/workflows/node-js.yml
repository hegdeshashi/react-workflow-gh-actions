#name of the workflow
name: My Second Manual Workflow
on: 
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    # set node.js 
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}  
      
    # Cache dependency  
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
        
    # Install dependencies    
    - name: Install dependencies
      run: npm install
      
      # Build
    - name: Build
      run: npm run build
 
  #Code Coverage
  sonarscan:
    runs-on: ubuntu-latest
    needs: build
    name: SonarQube
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  
  
  #CodeQuality/Security
  securityscan:
    runs-on: ubuntu-latest
    needs: sonarscan
    name: SecurtyScan 
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@master
      with:
      #  args: '.'
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif
        
  #Upload it to Artifact
  artifact:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    name: Artifact
    needs: securityscan

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    #- uses: actions/checkout@v2
    # Runs a single command using the runners shell
    #- name: Send greeting
    #  run: echo "Hello .. I am in artifact"  
    #- uses: actions/checkout@master
    #- uses: jakejarvis/s3-sync-action@master
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: 'us-east-1'   # optional: defaults to us-east-1  
    #- uses: aws-actions/configure-aws-credentials@v1
    - name: Deploy to S3
     # if: github.ref == 'refs/heads/master'
      run: aws s3 sync s3://devopsanalyticsartifacts/public/ s3://upload-githubaction-data/public/
     # env:
        #AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #AWS_REGION: 'us-east-1'   # optional: defaults to us-east-1  
        #AWS_EC2_METADATA_DISABLED: true
    
    
  #Dev:
    # The type of runner that the job will run on
  #  runs-on: ubuntu-latest
  #  environment: Dev
  #  needs: artifact

    # Steps represent a sequence of tasks that will be executed as part of the job
  #  steps:
  #  - uses: actions/checkout@v2
    # Runs a single command using the runners shell
  #  - name: Deploying to S3 bucket
  #    run: echo "hello in Dev env"

  
  #QA:
    # The type of runner that the job will run on
  #  runs-on: ubuntu-latest
  #  environment: QA
  #  needs: Dev

    # Steps represent a sequence of tasks that will be executed as part of the job
  #  steps:
  #  - uses: actions/checkout@v2
    # Runs a single command using the runners shell
  #  - name: Send greeting
  #    run: echo "Hello .. I am in QA env"  
  
  #Prod:
    # The type of runner that the job will run on
  #  runs-on: ubuntu-latest
  #  environment: Prod
  #  needs: QA

    # Steps represent a sequence of tasks that will be executed as part of the job
  #  steps:
  #  - uses: actions/checkout@v2
    # Runs a single command using the runners shell
  #  - name: Send greeting
  #    run: echo "Hello .. I am in Prod env"  
